Client_Server
1. Прочитать про клиент-серверную архитектуру
Тонкий клиент - основные джанные берутся с сервера (Например, браузер для выхода в интернет)
Толстый клиент - большая часть арсчитывается на клиенте, но чатсь информации запрашивается с сервера (Например, 1С, онлайн-игры типа Танки)
Веб-сайты - информационная нагрузка 
Веб-приложения - можно вводить свои данные, взаимодействовать с конетентом (ВК, Facebook)
Веб-сервисы - прикладной интерфейс программы(API), позволяет различным веб-приложениям взаимодействовать между собой. Разделяется на SOAP(протокол, XML), REST(гибкий, JSON)

2. Что такое HTTP и HTTPS
HTTP (от англ. HyperText Transfer Protocol) ― это протокол передачи данных в интернете. С его помощью браузер получает информацию от сервера и показывает пользователю контент. Это первый протокол, который создали для работы в веб-пространстве.
HTTPS (от англ. HyperText Transfer Protocol Secure) ― защищённый протокол передачи данных в интернете. Это тот же протокол HTTP, но защищенный SSL-сертификатом.
HTTP работает по порту 80, а HTTPS ― по порту 443

3. HTTP методы
Метод HTTP (англ. HTTP Method) — последовательность из любых символов, кроме управляющих и разделителей, указывающая на основную операцию над ресурсом.
  OPTIONS - Используется для определения возможностей веб-сервера или параметров соединения для конкретного ресурса.
  GET - Используется для запроса содержимого указанного ресурса.  С помощью метода GET можно также начать какой-либо процесс. В этом случае в тело ответного сообщения следует включить информацию о ходе выполнения процесса. GET запрос идемпотентный - при повторном применении дает один и тот же результат.
  HEAD - Аналогичен методу GET, за исключением того, что в ответе сервера отсутствует тело. Запрос HEAD обычно применяется для извлечения метаданных, проверки наличия ресурса (валидация URL) и чтобы узнать, не изменился ли он с момента последнего обращения.
  POST - Применяется для передачи пользовательских данных заданному ресурсу. Не считается идемпотентным.
  PUT - Применяется для загрузки содержимого запроса на указанный в запросе URI. Фундаментальное различие методов POST и PUT заключается в понимании предназначений URI ресурсов. Метод POST предполагает, что по указанному URI будет производиться обработка передаваемого клиентом содержимого. Используя PUT, клиент предполагает, что загружаемое содержимое соответствует находящемуся по данному URI ресурсу. 
  PATCH - Аналогично PUT, но применяется только к фрагменту ресурса. 
  DELETE - Удаляет указанный ресурс.
  RACE - Возвращает полученный запрос так, что клиент может увидеть, какую информацию промежуточные серверы добавляют или изменяют в запросе.
  CONNECT - Преобразует соединение запроса в прозрачный TCP/IP-туннель, обычно чтобы содействовать установлению защищённого SSL-соединения через нешифрованный прокси. 
  
4. HTTP статус коды сервера
Часть первой строки ответа сервера при запросах по протоколу HTTP. Он представляет собой целое трёхразрядное десятичное число. Первая цифра указывает на класс состояния. За кодом ответа обычно следует отделённая пробелом поясняющая фраза на английском языке, которая разъясняет человеку причину именно такого ответа.
https://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA_%D0%BA%D0%BE%D0%B4%D0%BE%D0%B2_%D1%81%D0%BE%D1%81%D1%82%D0%BE%D1%8F%D0%BD%D0%B8%D1%8F_HTTP
1хх - Информационные
2хх - Успех операции
3хх - Перенаправление
4хх - Ошибка на стороне клиента
5хх - Ошибка на стороне сервера

5. Что такое ядро браузера 
Ядро - это программа или модуль, который отображает контент на основе языка разметки. Браузерный движок выполняет всю "грязную" работу: загрузка, обработка, отрисовка данных и все возможные расчёты.

6. Какие браузеры какие ядра используют
    Blink — движок браузера Chromium, браузера Google Chrome с 28 версии, Microsoft Edge с 79 версии, Opera c 15 версии и Vivaldi. Он является ответвлением WebKit.
    Gecko — открытый движок проекта Mozilla; используется в большом числе программ, основанных на коде Mozilla (браузере Firefox, почтовом клиенте Thunderbird, наборе программ SeaMonkey).
    WebKit — движок для браузера Apple Safari, включенного в операционную систему Mac OS X, и браузера Google Chrome (до 2013 года). Встроен в библиотеку Qt (Начиная с Qt 5.6 признан устаревшим).
    KHTML — разработан в рамках проекта KDE, используется в браузере Konqueror и послужил основой для WebKit.

7. Что такое API - это механизмы, которые позволяют двум программным компонентам взаимодействовать друг с другом, используя набор определений и протоколов.

8. Что такое ендпоинты

9. URL (URI, URL, URN)
URI - унифицированный идентификатор ресурса. URI является либо URL, либо URN, либо одновременно обоими. Содержит в себе следующие части:
    Схема (scheme) - показывает на то, как обращаться к ресурсу, чаще всего это сетевой протокол (http, ftp, ldap)
    Иерархическая часть (hier-part) - данные, необходимые для идентификации ресурса (например, адрес сайта)
    Запрос (query) - необязательные дополнительные данные ресурса (например, поисковой запрос)
    Фрагмент (fragment) – необязательный компонент для идентификации вторичного ресурса ресурса (например, место на странице)
URL - унифицированный определитель местонахождения ресурса.
URN - унифицированное имя ресурса.

10. Идемпотентные HTTP методы
Метод HTTP является идемпотентным, если повторный идентичный запрос, сделанный один или несколько раз подряд, имеет один и тот же эффект, не изменяющий состояние сервера.
GET, HEAD, PUT и DELETE (хотя код возврата может отличатся)

11. Безопасные HTTP методы
Метод HTTP является безопасным, если он не меняет состояние сервера. Все безопасные запросы индемпотентны, но не все идемпотентные запросы безопасны.
GET, HEAD или OPTIONS.

12. Иденфикация, Аутентификация, Авторизация
Идентификация — процесс распознавания пользователя по его идентификатору. (Проверка имени)
Аутентификация — процедура проверки подлинности, доказательство что пользователь именно тот, за кого себя выдает. (Проверка пароля)
  Многофакторная аутентификация - проверка двух разных типов аутентификационных данных.
  Однофакторная двухэтапная аутентификация - использование дополнительного токена для проверки (смп, генератор одноразовых паролей).
Авторизация — предоставление определённых прав. (Открытие доступа)

13. Что такое IP

14. Что такое октаты в DNS

15. Что такое порт, сколько портов у Linux сервера

16. Уровни OSI

17. Хедеры http запросов
